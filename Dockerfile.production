# Dockerfile.production - 生产环境优化的Docker镜像

# 多阶段构建，减小镜像体积
FROM python:3.12-slim-bookworm as builder

# 安装构建依赖
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# 设置工作目录
WORKDIR /app

# 复制并安装Python依赖
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir --user -r requirements.txt

# 生产阶段
FROM python:3.12-slim-bookworm

# 创建非root用户
RUN groupadd -r appuser && useradd -r -g appuser appuser

# 安装运行时依赖
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# 从builder阶段复制Python包
COPY --from=builder /root/.local /home/appuser/.local

# 设置工作目录
WORKDIR /app

# 复制应用代码
COPY . /app

# 创建日志目录
RUN mkdir -p /app/logs && \
    chown -R appuser:appuser /app

# 确保脚本可执行
RUN chmod +x /app/entrypoint.sh

# 切换到非root用户
USER appuser

# 设置环境变量
ENV PATH=/home/appuser/.local/bin:$PATH
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# 暴露端口
EXPOSE 8000

# 启动应用
ENTRYPOINT ["/app/entrypoint.sh"]
